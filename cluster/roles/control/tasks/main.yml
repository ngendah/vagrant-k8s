---
- name: Install etcdctl
  apt:
    name: "etcd-client"
    state: present
    update_cache: yes

- name: Initialize Kubernetes
  block:
  - name: Initialize Kubernetes using kubeadm
    ansible.builtin.command: >
      kubeadm init --apiserver-advertise-address={{ host_ip }} --pod-network-cidr={{ pod_network_cidr }}
    args:
      creates: /etc/kubernetes/admin.conf
    notify:
    - Restart kubelet
    - Restart AppArmor

- name: Generate node join command
  block:
  - name: Generate join command
    ansible.builtin.command: kubeadm token create --print-join-command
    register: join_command

  - name: Copy join command to local file
    become: false
    local_action: copy content="{{ join_command.stdout_lines[0] }}" dest="./join-command"

- name: Setup Kubernetes user
  block:
  - name: Setup kubeconfig for user
    become: false
    register: user_id
    ansible.builtin.command: whoami

  - name: Mkdir for user config
    ansible.builtin.file:
      path: /home/{{ user_id.stdout }}/.kube
      state: directory
      owner: "{{ user_id.stdout }}"

  - name: Setup kubeconfig for user
    ansible.builtin.copy:
      force: false
      src: /etc/kubernetes/admin.conf
      dest: /home/{{ user_id.stdout }}/.kube/config
      remote_src: true
      owner: "{{ user_id.stdout }}"
      mode: u=rwx,g-rwx,o-rwx

  - name: Download kubeconfig for host user
    become: false
    ansible.builtin.fetch:
      src: /home/{{ user_id.stdout }}/.kube/config
      dest: ./kubeconfig
      flat: true

  - name: Add kubectl alias
    become: false
    ansible.builtin.lineinfile:
      path: /home/{{ user_id.stdout }}/.bashrc
      regexp: "^alias k="
      line: "alias k=kubectl"

- name: Install Kubernetes feature
  block:
  - name: Install Weavenet
    become: false
    become_user: "{{ user_id.stdout }}"
    ansible.builtin.shell: |
      {{ item }}
    with_items:
    - kubectl apply -f https://github.com/weaveworks/weave/releases/download/{{ weavenet_version }}/weave-daemonset-k8s.yaml

  - name: Install gVisor runtime class
    become: false
    when: "(no_gvisor is undefined) or (no_gvisor|bool == false)"
    ansible.builtin.shell: |
     kubectl apply -f - <<EOF
      apiVersion: node.k8s.io/v1
      kind: RuntimeClass
      metadata:
        name: gvisor
      handler: runsc
     EOF

  - name: Kubernetes audit policies
    when: "enable_audit|bool == true"
    block:
    - name: Install audit policy file
      ansible.builtin.copy:
        src: audit-policy.yml
        dest: /etc/kubernetes/audit-policy.yaml
        mode: u=rx,g=r,o=r
  
    - name: Enable audit policy
      block:
      - name: Enable audit policy - mount policy file
        ansible.builtin.blockinfile:
          path: /etc/kubernetes/manifests/kube-apiserver.yaml
          insertafter: '^\s+volumes:$'
          marker: '# {mark} audit-policy-volume'
          block: |
            {{ volumes|indent(2, first=true) }}
        vars:
          volumes: |
           - name: audit
             hostPath:
               path: /etc/kubernetes/audit-policy.yaml
               type: File
           - name: audit-log
             hostPath:
               path: /var/log/kubernetes/audit/
               type: DirectoryOrCreate
  
      - name: Enable audit policy - volume mounts
        ansible.builtin.blockinfile:
          path: /etc/kubernetes/manifests/kube-apiserver.yaml
          insertafter: '^\s+volumeMounts:$'
          marker: '# {mark} audit-policy-volume-mounts'
          block: |
            {{ mounts|indent(4, first=true) }}
        vars:
          mounts: |
           - mountPath: /etc/kubernetes/audit-policy.yaml
             name: audit
             readOnly: true
           - mountPath: /var/log/kubernetes/audit/
             name: audit-log
             readOnly: false
  
      - name: Enable audit policy - update options
        ansible.builtin.blockinfile:
          path: /etc/kubernetes/manifests/kube-apiserver.yaml
          insertafter: '^\s+-\s+kube-apiserver$'
          marker: '# {mark} audit-policy'
          block: |
            {{ options|indent(4, first=true) }}
        vars:
          options: |
            - --audit-policy-file=/etc/kubernetes/audit-policy.yaml
            - --audit-log-path=/var/log/kubernetes/audit/audit.log
            - --audit-log-maxsize=10
            - --audit-log-maxage=1
            - --audit-log-maxbackup=5

